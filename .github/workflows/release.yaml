name: Release

on:
  #schedule:
  #  - cron:  '0 3 * * *'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      device-id:
        description: Device ID
        required: false
      magisk-preinit-device:
        description: Magisk preinit device
        required: false
      ota-version:
        description: OTA version
        required: false
      magisk-version:
        description: Magisk version
        required: false
      force-ota-server-upload:
        description: Force OTA server upload
        required: false
        type: boolean
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # Allow for switching to github-pages branch
          fetch-depth: 0 
      - run: sudo apt-get install -y jq curl git
      - name: release
        env:
          PASSPHRASE_AVB: ${{ secrets.PASSPHRASE_AVB }}
          PASSPHRASE_OTA: ${{ secrets.PASSPHRASE_OTA }}
          KEY_AVB_BASE64: ${{ secrets.KEY_AVB_BASE64 }}
          CERT_OTA_BASE64: ${{ secrets.CERT_OTA_BASE64 }}
          KEY_OTA_BASE64: ${{ secrets.KEY_OTA_BASE64 }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO: ${{ github.repository }}
          DEVICE_ID: ${{ github.event.inputs.device-id || 'oriole' }}
          MAGISK_PREINIT_DEVICE: ${{ github.event.inputs.magisk-preinit-device || 'metadata' }}
          MAGISK_VERSION: ${{ github.event.inputs.magisk-version || 'latest' }}
          OTA_VERSION: ${{ github.event.inputs.ota-version || 'latest' }}
          FORCE_OTA_SERVER_UPLOAD: ${{ github.event.inputs.force-ota-server-upload || 'false' }}
        run: DEBUG=1 bash -c '. rooted-ota.sh && createAndReleaseRootedOta'

